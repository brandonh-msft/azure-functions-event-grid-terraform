stages:
- template: terraform-stages-template.yml
  parameters:
    stageSuffix: top
    stageSuffixDisplayName: top
    TerraformArguments: >-
      -prefix "${{ variables.PREFIX }}""
      -target module.functions

- stage: FunctionsRelease
  displayName: Functions Deployment
  dependsOn:
    - BuildFunctionsArtifact
    - Terraform_Apply_top
  jobs:
    - deployment: DeployFunctions
      displayName: Deploy Functions
      pool:
        vmImage: ubuntu-latest
      strategy:
        runOnce:
          deploy:
            steps:
            - bash: ls -al
              displayName: List Everything under Pipeline.Workspace
              workingDirectory: $(Pipeline.Workspace)

            - bash: ls -al
              displayName: List Out Variables Test Dir
              workingDirectory: $(Pipeline.Workspace)/variables_top

            - bash: |
                set -eu
                cat ./variables.json
                cat ./variables.json | jq -r '
                  . as $in
                  | keys[] 
                  | ["##vso[task.setvariable variable=" + . + "]" + ($in[.] | tostring)]
                  | @tsv'
              name: TerraformOutputs
              displayName: Export variables outputs
              workingDirectory: $(Pipeline.Workspace)/variables_top

            - bash: |
                echo '$FUNCTION_APP_NAME: ' $FUNCTION_APP_NAME
                echo '$DELIVERY_TOPIC_ID: '$DELIVERY_TOPIC_ID
              displayName: echoing out environments
              
            - template: functions-deploy-template.yml
              parameters:
                artifactName: $(artifactName)
                packDirectory: $(packDirectory)
                functionAppName: $(FUNCTION_APP_NAME)
                keyVaultName: $(SHARED_KV_NAME)
                serviceConnection: $(serviceConnectionName)

- template: terraform-stages-template.yml
  parameters:
    stageSuffix: bottom
    stageSuffixDisplayName: bottom
    TerraformArguments: >-
      -prefix "${{ variables.PREFIX }}""